{
	"info": {
		"_postman_id": "464c9ece-7af0-419a-8d1e-d8e3a175eeb1",
		"name": "BEN_CodingTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18928820"
	},
	"item": [
		{
			"name": "새 사용자 생성",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"응답 상태 코드가 201인지 확인\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"응답 본문에 id 필드가 존재하는지 확인\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"// 생성된 user_id를 환경 변수로 저장\r",
							"pm.environment.set(\"user_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"홍길동\",\r\n  \"email\": \"hong@example.com\",\r\n  \"password\": \"securepassword\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "사용자 정보 검색",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"응답 상태 코드가 200인지 확인\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"응답 본문에 name과 email 필드가 존재하는지 확인\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"email\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "사용자 정보 업데이트",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"응답 상태 코드가 200인지 확인\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"응답 본문이 업데이트된 정보를 포함하는지 확인\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"홍길순\");\r",
							"    pm.expect(jsonData.email).to.eql(\"hongsun@example.com\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"홍길순\",\r\n  \"email\": \"hongsun@example.com\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "사용자 삭제",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"응답 상태 코드가 204인지 확인\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "삭제한 사용자 확인",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"삭제 후 조회 시 404 상태 코드가 반환되는지 확인\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	]
}